<UserControl xmlns="https://github.com/avaloniaui"
             xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
             xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
             xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
             xmlns:controls="clr-namespace:WalletWasabi.Fluent.Controls"
             xmlns:coinSelection="clr-namespace:WalletWasabi.Fluent.ViewModels.CoinSelection"
             xmlns:converters="clr-namespace:WalletWasabi.Fluent.Converters"
             mc:Ignorable="d" d:DesignWidth="800" d:DesignHeight="650"
             x:CompileBindings="True"
             x:DataType="coinSelection:SelectCoinsDialogViewModel"
             x:Class="WalletWasabi.Fluent.Views.CoinSelection.SelectCoinsDialogView">

  <UserControl.Styles>
    <Style Selector="Button.quickAction">
      <Setter Property="Foreground" Value="{DynamicResource TextControlForeground}" />
      <Setter Property="Cursor" Value="Hand" />
      <Setter Property="BorderThickness" Value="0" />
      <Setter Property="Padding" Value="0" />
      <Setter Property="Background" Value="Transparent" />
    </Style>

    <Style Selector="Button.quickAction /template/ ContentPresenter">
      <Setter Property="Background" Value="Transparent" />
    </Style>

    <Style Selector="Button.quickAction:pointerover /template/ AccessText">
      <Setter Property="TextDecorations" Value="Underline" />
      <Setter Property="Background" Value="Transparent" />
      <Setter Property="Opacity" Value="1" />
    </Style>

    <Style Selector="Button.quickAction:pressed /template/ AccessText">
      <Setter Property="Background" Value="Transparent" />
      <Setter Property="Opacity" Value="0.5" />
    </Style>

    <Style Selector="Button.quickAction:disabled AccessText">
      <Setter Property="TextDecorations" Value="{x:Null}" />
      <Setter Property="Foreground" Value="{DynamicResource TextControlForeground}" />
    </Style>
  </UserControl.Styles>

  <controls:ContentArea
    Title="{Binding Title}"
    EnableBack="{Binding EnableBack}"
    EnableNext="True"
    NextContent="Continue"
    EnableCancel="{Binding EnableCancel}"
    IsBusy="{Binding IsBusy}"
    ScrollViewer.VerticalScrollBarVisibility="Disabled">

    <controls:ContentArea.Styles>
      <Style Selector="TreeDataGridRow">
        <Setter Property="Focusable" Value="False" />
        <Setter Property="Height" Value="47.5" />
      </Style>

      <Style Selector="TreeDataGridRow ContentPresenter">
        <Setter Property="VerticalAlignment" Value="Center" />
      </Style>

      <Style Selector="TreeDataGridTemplateCell > ContentPresenter">
        <Setter Property="Margin" Value="5 0 10 0"></Setter>
      </Style>

      <Style Selector="ContentPresenter > TextBlock">
        <Setter Property="FontFamily" Value="{StaticResource MonospacedFont}" />
      </Style>

      <Style Selector="TextBox.FilterBox">
        <Setter Property="Transitions">
          <Setter.Value>
            <Transitions>
              <DoubleTransition Property="Opacity" Duration="0:0:0.25" />
            </Transitions>
          </Setter.Value>
        </Setter>
      </Style>

      <Style Selector="TextBox.FilterBox.Visible">
        <Setter Property="Opacity" Value="1" />
      </Style>
      <Style Selector="TextBox.FilterBox.Hidden">
        <Setter Property="Opacity" Value="0" />
      </Style>

    </controls:ContentArea.Styles>

    <DockPanel>
      <DockPanel DockPanel.Dock="Top" Margin="8" LastChildFill="False">
        <DockPanel.Styles>
          <Style Selector="TextBox /template/ DataValidationErrors">
            <Setter Property="IsVisible" Value="False" />
          </Style>
        </DockPanel.Styles>
        <CheckBox x:Name="GroupByLabels" DockPanel.Dock="Left" Content="Group by Labels" />
        <TextBox Classes="FilterBox"
                 Width="200"
                 Classes.Visible="{Binding #GroupByLabels.IsChecked}"
                 Classes.Hidden="{Binding !#GroupByLabels.IsChecked}"
          Text="{Binding LabelBasedSelection.Filter, Mode=TwoWay}"
          Watermark="Filter" Margin="20 0 0 0">
        </TextBox>
      </DockPanel>

      <StackPanel DockPanel.Dock="Bottom" Spacing="2" Margin="0 12 0 0">

        <ProgressBar Maximum="{Binding TargetAmount.Satoshi}" Value="{Binding SelectedAmount^.Satoshi}" Margin="0 4 0 0" />

        <Grid x:Name="Summary" ColumnDefinitions="* *">

          <Grid.Styles>
            <Style Selector="Button">
              <Setter Property="Background" Value="Transparent" />
              <Setter Property="Padding" Value="0" />
              <Setter Property="Margin" Value="0" />
              <Setter Property="BorderThickness" Value="0" />
              <Setter Property="Opacity" Value="0.6" />
              <Setter Property="TextBlock.FontSize" Value="{StaticResource FontSizeH8}" />
            </Style>
            <Style Selector="Separator">
              <Setter Property="Width" Value="2" />
              <Setter Property="Height" Value="10" />
              <Setter Property="VerticalAlignment" Value="Stretch" />
            </Style>
          </Grid.Styles>

          <StackPanel Orientation="Horizontal" Spacing="8">
            <TextBlock Classes="h8 monoSpaced" x:Name="Remaining" Text="{Binding RemainingAmount^, StringFormat='{}{0} BTC remaining', Converter={x:Static converters:MoneyConverters.ToFormattedString}}" IsVisible="{Binding RemainingAmount^.Satoshi}" />
            <Separator IsVisible="{Binding #Remaining.IsVisible}" />
            <TextBlock Classes="h8 monoSpaced">
              <TextBlock.Text>
                <MultiBinding StringFormat="{}{0} coin{1} selected">
                  <Binding Path="SelectedCount^" />
                  <Binding Path="SelectedCount^"
                           Converter="{x:Static converters:StringConverters.AddSIfPluralConverter}" />
                </MultiBinding>
              </TextBlock.Text>
            </TextBlock>
          </StackPanel>

          <StackPanel Grid.Column="1" Orientation="Horizontal" Spacing="8" HorizontalAlignment="Right">
            <Button Classes="quickAction h8" Command="{Binding SelectAllPrivateCoinsCommand}">Select all private</Button>
            <Separator />
            <Button Classes="quickAction h8" Command="{Binding SelectAllCoinsCommand}">Select all</Button>
            <Separator />
            <Button Classes="quickAction h8" Command="{Binding ClearCoinSelectionCommand}">Clear selection</Button>
            <Separator />
            <Button Classes="quickAction h8" Command="{Binding SelectPredefinedCoinsCommand}">Automatic</Button>
          </StackPanel>
        </Grid>

      </StackPanel>

      <Border>
        <Panel>
          <TreeDataGrid
            IsVisible="{Binding !#GroupByLabels.IsChecked}"
            Source="{Binding CoinBasedSelection.Source}"
            CanUserSortColumns="True">
          </TreeDataGrid>
          <TreeDataGrid
            IsVisible="{Binding #GroupByLabels.IsChecked}"
            Source="{Binding LabelBasedSelection.Source}"
            CanUserSortColumns="True">
          </TreeDataGrid>
        </Panel>
      </Border>
    </DockPanel>

    <controls:ContentArea.ButtonAreaContent>

      <StackPanel x:Name="Errors" HorizontalAlignment="Center" VerticalAlignment="Center">
        <TextBlock VerticalAlignment="Center" TextWrapping="Wrap" TextAlignment="Center"
                   IsVisible="{Binding IsSelectionBadlyChosen^}"
                   Foreground="{DynamicResource SystemErrorTextColor}"
                   Text="The current selection will decrease your privacy" />
        <TextBlock VerticalAlignment="Center"
                   TextAlignment="Center"
                   IsVisible="{Binding !EnoughSelected^}"
                   TextWrapping="Wrap"
                   Text="Please, select more coins" />
      </StackPanel>

    </controls:ContentArea.ButtonAreaContent>

  </controls:ContentArea>
</UserControl>
